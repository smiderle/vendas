<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

    <security:global-method-security secured-annotations="enabled" />

    <security:http auto-config="true" use-expressions="true">

        <!-- <security:intercept-url pattern="/" access="permitAll" /> -->
        <security:intercept-url pattern="/app/index.html" access="isAuthenticated()" />
        <security:intercept-url pattern="/app/load.html" access="isAuthenticated()" />
        <security:intercept-url pattern="/app/views/**" access="isAuthenticated()" />
        <security:intercept-url pattern="/app/includes/**" access="isAuthenticated()" />

        <security:form-login login-page="/app/login.html" authentication-failure-url="/app/login.html?error=403" default-target-url="/app/load.html" always-use-default-target="true" />
		<!-- <security:logout/> -->
        <!-- <security:logout delete-cookies="JSESSIONID" logout-success-url="/app/login.html" logout-url="/j_spring_security_logout" /> -->
        <security:logout  delete-cookies="JSESSIONID" logout-success-url="/app/login.html"/>
    </security:http>
    
    
    <bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
 
		<property name="driverClassName" value="org.postgresql.Driver" />
		<property name="url" value="jdbc:postgresql://localhost/VENDASLIMDB" />
		<property name="username" value="root" />
		<property name="password" value="root" />
	</bean>
	
    
    <security:authentication-manager>
	  <security:authentication-provider>
		<security:jdbc-user-service data-source-ref="dataSource"
		  authorities-by-username-query="SELECT U.EMAIL, P.PERMISSAO 
											 FROM USUARIO U, USUARIO_PERMISSAO P 
											WHERE U.IDUSUARIO = P.IDUSUARIO 
											  AND UPPER(U.EMAIL) = UPPER(?)"
				users-by-username-query="SELECT EMAIL, SENHA, ATIVO 
									   FROM USUARIO 
									  WHERE UPPER(EMAIL) = UPPER(?)" />
	  </security:authentication-provider>
	</security:authentication-manager>
    
    
    <!-- <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider ref="customAuthenticationProvider" />
    </security:authentication-manager> -->    
     
     
      <!--
    Usernames/Passwords are
        rod/koala
        rod2/koala@gmail.com
        dianne/emu
        scott/wombat
        peter/opal
    These passwords are from spring security app example
    -->
     <!-- <security:authentication-manager>
	    <security:authentication-provider>
	        <security:password-encoder hash="md5"/>
	        <security:user-service>	            
	            <security:user name="rod" password="a564de63c2d0da68cf47586ee05984d7" authorities="ROLE_SUPERVISOR, ROLE_USER, ROLE_TELLER" />
	            <security:user name="rod@gmail.com" password="a564de63c2d0da68cf47586ee05984d7" authorities="ROLE_SUPERVISOR, ROLE_USER, ROLE_TELLER" />
	            <security:user name="dianne" password="65d15fe9156f9c4bbffd98085992a44e" authorities="ROLE_USER,ROLE_TELLER" />
	            <security:user name="scott" password="2b58af6dddbd072ed27ffc86725d7d3a" authorities="ROLE_USER" />
	            <security:user name="peter" password="22b5c9accc6e1ba628cedc63a72d57f8" authorities="ROLE_USER" />
		    </security:user-service>
		</security:authentication-provider>
	</security:authentication-manager> -->
</beans>